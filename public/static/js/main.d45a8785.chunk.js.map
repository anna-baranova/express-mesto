{"version":3,"sources":["images/header__logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logoPath","alt","Footer","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","onCardClick","type","onCardDelete","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","PopupWithForm","isOpen","onClose","title","onSubmit","autoComplete","children","buttonName","ImagePopup","api","baseUrl","token","this","_baseUrl","_token","Promise","all","getUserData","getCards","fetch","headers","authorization","then","res","_getResponseData","data","method","body","JSON","stringify","id","ok","json","reject","status","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","placeholder","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","place","setPlace","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setiIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getFullData","userData","cardsData","catch","console","log","Provider","item","changeLikeCardStatus","newCard","state","c","removeCard","newCards","filter","changeUserData","changeAvatar","createCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d45a8785.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport logoPath from './../images/header__logo.svg';\r\n\r\n\r\nfunction Header () {\r\n    return(\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logoPath} alt='логотип' />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from \"react\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        `place-grid__delete ${isOwn ? '' : 'place-grid__delete_hidden'}`\r\n    ); \r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n        `place-grid__like-btn ${isLiked ? 'place-grid__like-liked' : ''}`\r\n    ); \r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n      return(\r\n        <li className=\"place-grid__list-item\">\r\n            <img className=\"place-grid__item\"  src={props.card.link} alt={props.card.name} onClick={handleClick}/>\r\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleCardDelete} ></button>\r\n            <div className=\"place-grid__title-container\">\r\n                <h2 className=\"place-grid__title\">{props.card.name}</h2>\r\n                <div className=\"place-grid__like\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <span className=\"place-grid__like-count\">{props.card.likes.length}</span>\r\n                </div>\r\n            </div>    \r\n        </li>\r\n      )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card.js';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext'\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return(\r\n        <main>\r\n            <section className=\"profile\">\r\n                <img className=\"profile__image\" src={currentUser.avatar} alt=\"Жак-Ив Кусто\" onClick={props.onEditAvatar}/>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__info-title\">{currentUser.name}</h1>\r\n                    <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\r\n                    <p className=\"profile__info-subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"place-grid\">\r\n                <ul className=\"place-grid__list\">\r\n                    {props.cards.map((card) => (\r\n                    <Card \r\n                    key={card._id} \r\n                    card={card} \r\n                    onCardClick={props.onCardClick}\r\n                    onCardLike={props.onCardLike} \r\n                    onCardDelete={props.onCardDelete}\r\n                    />\r\n                    )\r\n                    )}\r\n                </ul>\r\n            </section>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return(\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen ? ('popup_visible') : ('')}`}>\r\n            <div className=\"popup__overlay\" onClick={props.onClose}></div>\r\n            <div className=\"popup__container\">\r\n                <h2 className=\"popup__title\">{props.title}</h2>\r\n                <button type=\"button\" className=\"popup__close-btn\" onClick={props.onClose}></button>\r\n                <form className={`form form_type_${props.name}`} name={`${props.name}-form`} onSubmit={props.onSubmit} autoComplete=\"off\">\r\n                    {props.children}\r\n                    <button type=\"submit\" className=\"form__save-btn\">{props.buttonName}</button>\r\n                </form>   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return(\r\n        <div className={`popup popup_type_zoom-card ${props.isOpen ? ('popup_visible') : ('')}`}>\r\n            <div className=\"popup__overlay\" onClick={props.onClose}></div>\r\n            <figure className=\"popup__zoom\">\r\n                <button type=\"button\" className=\"popup__close-btn\" onClick={props.onClose}></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>\r\n                <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","class Api {\r\n    constructor({baseUrl, token}) {\r\n        this._baseUrl = baseUrl;\r\n        this._token = token;\r\n    }\r\n\r\n    getFullData() {\r\n        return Promise.all([this.getUserData(), this.getCards()])\r\n    }\r\n\r\n    getUserData() {\r\n        return fetch (`${this._baseUrl}/users/me`, {\r\n            headers: {authorization: this._token}\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    }    \r\n\r\n    getCards() {\r\n        return fetch (`${this._baseUrl}/cards`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    };\r\n\r\n    changeUserData(data) {\r\n        return fetch (`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    changeAvatar(data) {\r\n        return fetch (`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    createCard(data) {\r\n        return fetch (`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    removeCard(id) {\r\n        return fetch (`${this._baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    changeLikeCardStatus(id, isLiked) {\r\n        if(isLiked)\r\n        {return fetch (`${this._baseUrl}/cards/likes/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n    } else {\r\n        return fetch (`${this._baseUrl}/cards/likes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(res => this._getResponseData(res))\r\n        }\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`${res.status}`); \r\n        }\r\n        return res.json();\r\n      }\r\n    \r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\r\n    token: 'c7246450-eb40-44a5-8abb-048e9d2f61cc'\r\n  })\r\n\r\nexport default api;\r\n\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\n\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    // Подписка на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n        \r\n    } \r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]); \r\n\r\n    return(\r\n        <PopupWithForm \r\n            name='edit' \r\n            title='Редактировать профиль' \r\n            buttonName='Сохранить' \r\n            isOpen={props.isOpen} \r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form__input form__input_type_name\" \r\n                id=\"your-name\" \r\n                name=\"name\" \r\n                placeholder=\"Имя\" \r\n                required \r\n                minLength=\"2\" \r\n                maxLength=\"40\"\r\n                value={name || ''}\r\n                onChange={handleNameChange}/>\r\n            <span \r\n                className=\"form__input-error\" \r\n                id=\"your-name-error\">\r\n            </span>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form__input form__input_type_job\" \r\n                id=\"your-job\" \r\n                name=\"about\" \r\n                placeholder=\"Занятие\" \r\n                required \r\n                minLength=\"2\" \r\n                maxLength=\"200\"\r\n                value={description || ''}\r\n                onChange={handleDescriptionChange}/>\r\n            <span \r\n                className=\"form__input-error\" \r\n                id=\"your-job-error\">\r\n            </span>  \r\n        </PopupWithForm>\r\n)}\r\n\r\nexport default EditProfilePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = React.useRef()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        props.onUpdateAvatar({\r\n          avatar: avatarRef.current.value\r\n        });\r\n      } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='avatar' \r\n            title='Обновить аватар' \r\n            buttonName='Сохранить' \r\n            isOpen={props.isOpen} \r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                type=\"url\" \r\n                className=\"form__input form__input_type_avatar\" \r\n                id=\"avatar-url\" \r\n                name=\"avatar\" \r\n                placeholder=\"Ссылка на аватарку\" \r\n                required\r\n                ref={avatarRef}\r\n            />\r\n            <span \r\n                className=\"form__input-error\" \r\n                id=\"avatar-url-error\">   \r\n            </span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [place, setPlace] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    function handlePlaceChange(e) {\r\n        setPlace(e.target.value)\r\n    }\r\n\r\n    function handleLinkChange(e) {\r\n        setLink(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            name: place,\r\n            link,\r\n        });\r\n        setPlace('');\r\n        setLink('');\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='add-card' \r\n            title='Новое место' \r\n            buttonName='Создать' \r\n            isOpen={props.isOpen} \r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                type=\"text\" \r\n                className=\"form__input form__input_type_place\" \r\n                id=\"travel-place\" \r\n                name=\"place\" \r\n                placeholder=\"Название\" \r\n                required \r\n                minLength=\"2\" \r\n                maxLength=\"30\"\r\n                value={place || ''}\r\n                onChange={handlePlaceChange}\r\n            />\r\n            <span \r\n                className=\"form__input-error\" \r\n                id=\"travel-place-error\">\r\n            </span>\r\n            <input \r\n                type=\"url\" \r\n                className=\"form__input form__input_type_link\" \r\n                id=\"place-url\" \r\n                name=\"link\" \r\n                placeholder=\"Ссылка на картинку\" \r\n                required\r\n                value={link || ''}\r\n                onChange={handleLinkChange}\r\n            />\r\n            <span \r\n                className=\"form__input-error\" \r\n                id=\"place-url-error\">\r\n            </span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Main from \"./Main\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport api from '../utils/api';\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\n\r\nfunction App() {\r\n\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\r\n    const [isAddPlacePopupOpen, setiIsAddPlacePopupOpen] = React.useState(false)\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\r\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false)\r\n    const [selectedCard, setSelectedCard] = React.useState({})\r\n    const [currentUser, setCurrentUser] = React.useState({});\r\n    const [cards, setCards] = React.useState([])\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true)\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setiIsAddPlacePopupOpen(true)\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true)\r\n    }\r\n\r\n    function handleCardClick(item) {\r\n        setIsImagePopupOpen(true)\r\n        setSelectedCard(item)\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false)\r\n        setiIsAddPlacePopupOpen(false)\r\n        setIsEditAvatarPopupOpen(false)\r\n        setIsImagePopupOpen(false)\r\n    }\r\n\r\n    function handleCardLike(card) {\r\n        // Снова проверяем, есть ли уже лайк на этой карточке\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        \r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        api.changeLikeCardStatus(card._id, !isLiked)\r\n            .then((newCard) => {\r\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n            })\r\n            .catch(e => console.log(e));\r\n    } \r\n\r\n    function handleCardDelete(card) {\r\n        api.removeCard(card._id)\r\n          .then(() => {\r\n            const newCards = cards.filter(c => c._id !== card._id);\r\n            setCards(newCards);\r\n        })\r\n          .catch(e => console.log(e));\r\n    }\r\n\r\n    function handleUpdateUser(data) {\r\n        api.changeUserData(data)\r\n            .then(res => {\r\n                setCurrentUser(res);\r\n                closeAllPopups();\r\n            })\r\n            .catch(e => console.log(`Ошибка при изменении данных пользователя: ${e}`))\r\n    }\r\n\r\n    function handleUpdateAvatar(data) {\r\n        api.changeAvatar(data)\r\n            .then(res => {\r\n                setCurrentUser(res);\r\n                closeAllPopups();\r\n            })\r\n            .catch(e => console.log(`Ошибка при изменении аватара: ${e}`))\r\n    }\r\n\r\n    function handleAddPlaceSubmit(data) {\r\n        api.createCard(data)\r\n            .then(newCard => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch(e => console.log(`Ошибка при создании карточки: ${e}`))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        api.getFullData()\r\n            .then(([userData, cardsData]) => {\r\n\r\n                setCurrentUser(userData)\r\n               \r\n                setCards(cardsData)\r\n\r\n            })\r\n            .catch(e => console.log(`Ошибка при получении дефолтных данных: ${e}`))\r\n                }, [])\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n        <div className=\"page__container\">\r\n            <Header />\r\n            <Main \r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cards}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n            />\r\n            <Footer />\r\n        </div> \r\n\r\n        <EditProfilePopup \r\n            isOpen={isEditProfilePopupOpen} \r\n            onClose={closeAllPopups} \r\n            onUpdateUser={handleUpdateUser} \r\n        /> \r\n\r\n        <EditAvatarPopup \r\n            isOpen={isEditAvatarPopupOpen} \r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n        /> \r\n\r\n        <AddPlacePopup \r\n            isOpen={isAddPlacePopupOpen} \r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <ImagePopup \r\n            onClose={closeAllPopups} \r\n            isOpen={isImagePopupOpen} \r\n            card={selectedCard}\r\n        />\r\n\r\n        <PopupWithForm \r\n            name='confirm-delete' \r\n            title='Вы уверены?' \r\n            buttonName='Да' \r\n            onClose={closeAllPopups} \r\n        />\r\n    </div>    \r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}